<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=1024, user-scalable=no">

  <title>Datomic in 10 minutes (or more)</title>
  <meta name="author" content="GregÃ³rio Melo">
  <meta name="description" content="Datomic in 10 minutes (or more)">
  
  <!-- Required stylesheet -->
  <link rel="stylesheet" href="core/deck.core.css">
  
  <!-- Extension CSS files go here. Remove or add as needed. -->
  <link rel="stylesheet" href="extensions/goto/deck.goto.css">
  <link rel="stylesheet" href="extensions/menu/deck.menu.css">
  <link rel="stylesheet" href="extensions/navigation/deck.navigation.css">
  <link rel="stylesheet" href="extensions/status/deck.status.css">
  <link rel="stylesheet" href="extensions/hash/deck.hash.css">
  <link rel="stylesheet" href="extensions/scale/deck.scale.css">

  <!-- Style theme. More available in /themes/style/ or create your own. -->
  <link rel="stylesheet" href="themes/style/neon.css">
  
  <!-- Transition theme. More available in /themes/transition/ or create your own. -->
  <link rel="stylesheet" href="themes/transition/horizontal-slide.css">
  
  <!-- Required Modernizr file -->
  <script src="modernizr.custom.js"></script>
</head>
<body class="deck-container">

<!-- Begin slides. Just make elements with a class of slide. -->

<section class="slide">
  <h1>Datomic in 10 minutes (or more)</h1>
</section>

<section class="slide">
  <h2>Disclaimer</h2>
  <blockquote cite="http://example.com">
    <p>It is all in the interwebz</p>
  </blockquote>
</section>

<section class="slide">
  <h2>Datomic</h2>
  <h3>distributed database designed to enable scalable, flexible and intelligent applications, running on next-generation cloud architectures</h3>
</section>

<section class="slide">
  <h2>Datomic</h2>
  <h3>offers</h3>
  <ul>
    <li>ACID transactions</li>
    <li>joins</li>
    <li>data model</li>
    <li>query language</li>
  </ul>
</section>

<section class="slide">
  <h2>Datomic</h2>
  <h3>by doing this</h3>
  <ul>
    <li>bringing data manipulation capabilities to the applications</li>
    <li>fixing misconceptions with reads, writes and time</li>
    <li>immutability</li>
  </ul>
</section>

<section class="slide">
  <h2>Datomic</h2>
  <h3>no more manual</h3>
  <ul>
    <li>caching</li>
    <li>replication</li>
    <li>complex configuration</li>
    <li>sharding</li>
    <li>logging</li>
    <li>locking</li>
    <li>latching</li>
    <li>disk management</li>
  </ul>
</section>

<section class="slide">
  <h2>Because we live in a different world</h2>
  <blockquote cite="http://example.com">
    <p>The economy of computers in the 20th century kept us from doing the right thing.<p>
  </blockquote>
</section>

<section class="slide">
  <h2>Because we live in a different world</h2>
  <p>traditional DBs have to deliver</p>
  <ul>
    <li>coordination</li>
    <li>consistency</li>
    <li>indexing</li>
    <li>storage</li>
    <li>queries</li>
</section>

<section class="slide">
  <h2>Architecture of Datomic</h2>
  <p>Datomic breaks them apart and gets</p>
  <ul>
    <li>the ability to relocate subsystems</li>
    <li>the ability to let separate services take care of what they care about</li>
    <li>simplification of system components (?)</li>
</section>

<section class="slide">
  <h2>Architecture of Datomic</h2>
  <p>3 independent roles</p>
  <ul>
    <li>peers</li>
    <li>transactors</li>
    <li>storage service</li>
  </ul>
</section>

<section class="slide">
  <h2>Architecture of Datomic</h2>
  <h3>Peers</h3>
  <p>component library embedded in the apps</p>
  <ul>
    <li>talks to the transactor</li>
    <li>includes communication libraries</li>
    <li>provides data access, querying, caching and query capability</li>
  </ul>
</section>

<section class="slide">
  <h2>Architecture of Datomic</h2>
  <h3>Transactors</h3>
  <ul>
    <li>accepts transactions</li>
    <li>processes them serially</li>
    <li>commits to the storage service</li>
    <li>sends messages to the peers</li>
    <li>indexes stuff in the background</li>
</section>

<section class="slide">
  <h2>Architecture of Datomic</h2>
  <h3>Storage Service</h3>
  <ul>
    <li>interface to highly reliable, redundant storage</li>
    <li>available from third parties (like Amazon DynamoDB)</li>
  </ul>
</section>

<section class="slide">
  <h2>Other stuff</h2>
  <p>Separates reads from writes</p>
  <p><em>writes never have to wait for reads to finish</em></p>
</section>

<section class="slide">
  <h2>Other stuff</h2>
  <p>Integrated data distribution</p>
  <p><em>each peer and transactor manage their own local cache, in memmory. Self tuned cache!</em></p>
</section>

<section class="slide">
  <h2>Other stuff</h2>
  <p>Data awareness in the apps</p>
  <p><em>enabling apps to be smart about data</em></p>
</section>

<section class="slide">
  <h2>Other stuff</h2>
  <p>Elasticity</p>
  <p><em>databases as elastic as the apps + apps don't have to wait for another app's query</em></p>
</section>

<section class="slide">
  <h2>Other stuff</h2>
  <p>Cloud ready (!)</p>
</section>

<section class="slide">
  <h2>Other stuff</h2>
  <p>As fast as RAM</p>
  <p><em>the storage service is the bottleneck. the rest of the system runs primarily in memory</em></p>
</section>

<section class="slide">
  <h2>Data model</h2>
  <p>immutable data <em>a database of facts</em></p>
  <p>atomic data <em>entity, attribute, value, time</em></p>
  <p>minimal schema <em>doesn't require the entity model to be replicated to the database</em></p>
  <p>a different database <em>the indices contain data, not pointers</em></p>
</section>

<section class="slide">
  <h2>Programming model</h2>
  <p>Datalog</p>
  <pre>[:find ?e :where [?e :age 42]]</pre>
</section>

<!-- End slides. -->


<!-- Begin extension snippets. Add or remove as needed. -->

<!-- deck.navigation snippet -->
<a href="#" class="deck-prev-link" title="Previous">&#8592;</a>
<a href="#" class="deck-next-link" title="Next">&#8594;</a>

<!-- deck.status snippet -->
<p class="deck-status">
  <span class="deck-status-current"></span>
  /
  <span class="deck-status-total"></span>
</p>

<!-- deck.goto snippet -->
<form action="." method="get" class="goto-form">
  <label for="goto-slide">Go to slide:</label>
  <input type="text" name="slidenum" id="goto-slide" list="goto-datalist">
  <datalist id="goto-datalist"></datalist>
  <input type="submit" value="Go">
</form>

<!-- deck.hash snippet -->
<a href="." title="Permalink to this slide" class="deck-permalink">#</a>

<!-- End extension snippets. -->


<!-- Required JS files. -->
<script src="jquery-1.7.2.min.js"></script>
<script src="core/deck.core.js"></script>

<!-- Extension JS files. Add or remove as needed. -->
<script src="../core/deck.core.js"></script>
<script src="../extensions/hash/deck.hash.js"></script>
<script src="../extensions/menu/deck.menu.js"></script>
<script src="../extensions/goto/deck.goto.js"></script>
<script src="../extensions/status/deck.status.js"></script>
<script src="../extensions/navigation/deck.navigation.js"></script>
<script src="../extensions/scale/deck.scale.js"></script>

<!-- Initialize the deck. You can put this in an external file if desired. -->
<script>
  $(function() {
    $.deck('.slide');
  });
</script>
</body>
</html>

